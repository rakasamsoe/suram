#include <Keypad.h>
#include <EasyUltrasonic.h>
#include <SPI.h>
#include <Adafruit_GFX.h>     //Library GFX
#include <Adafruit_SSD1306.h> //Library OLED SSD1306
#include <Servo.h>
#include <TM1637Display.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include "DHT.h"
#define DHTPIN 2

#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);
#define CLK 7
#define DIO 6
int pot = A0;

#define TRIGPIN 11 // Digital pin connected to the trig pin of the ultrasonic sensor
#define ECHOPIN 12 // Digital pin connected to the echo pin of the ultrasonic sensor


EasyUltrasonic ultrasonic;

#define SCREEN_WIDTH 128 //Panjang LCD OLED
#define SCREEN_HEIGHT 64 //Tinggi LCD OLED
#define OLED_RESET -1    //Pin reset terhubung dengan arduino
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);


LiquidCrystal_I2C lcd(0x27, 20, 4);
Servo myservo;
int val;

const unsigned char rax [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x80, 0x38, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xfe, 0x00, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xf0, 0x01, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x00, 0x07, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x00, 0x1f, 0xef, 0xf0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x80, 0x00, 0xff, 0xc7, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x00, 0x07, 0xff, 0x83, 0xff, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x00, 0x3f, 0xfe, 0x00, 0xff, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x03, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x07, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x0f, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x0f, 0x80, 0x01, 0xfe, 0x00, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x07, 0x80, 0x03, 0xff, 0x80, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x07, 0x80, 0x07, 0x01, 0x80, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x07, 0x80, 0x06, 0x00, 0xc0, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x87, 0x80, 0x04, 0x00, 0xc0, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x87, 0x80, 0x0c, 0x00, 0xc0, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x87, 0x80, 0x0c, 0x00, 0xc0, 0x07, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x87, 0x80, 0x0c, 0x00, 0xc0, 0x07, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x87, 0xc0, 0x1f, 0xff, 0xf0, 0x07, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x83, 0xc0, 0x1f, 0xff, 0xf0, 0x07, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x83, 0xc0, 0x1f, 0xff, 0xf0, 0x07, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xc3, 0xc0, 0x1f, 0xef, 0xf0, 0x07, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xc3, 0xc0, 0x1f, 0xc7, 0xf0, 0x0f, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xc3, 0xe0, 0x1f, 0xc7, 0xf0, 0x0f, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xc1, 0xe0, 0x1f, 0xef, 0xf0, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xe1, 0xe0, 0x1f, 0xef, 0xf0, 0x1f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xe1, 0xf0, 0x1f, 0xcf, 0xf0, 0x1e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xe0, 0xf0, 0x1f, 0xcf, 0xf0, 0x1e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0xf0, 0x1f, 0xff, 0xf0, 0x3c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x78, 0x1f, 0xff, 0xf0, 0x3c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x78, 0x1f, 0xff, 0xf0, 0x78, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x3c, 0x00, 0x00, 0x00, 0x78, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf8, 0x3e, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfc, 0x1e, 0x00, 0x00, 0x01, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfc, 0x1f, 0x00, 0x00, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfe, 0x0f, 0x80, 0x00, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xfe, 0x07, 0xc0, 0x00, 0x07, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x07, 0xe0, 0x00, 0x0f, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x83, 0xf0, 0x00, 0x3f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x81, 0xf8, 0x00, 0x7f, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xc0, 0xfe, 0x00, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xe0, 0x7f, 0x87, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xf0, 0x3f, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xf8, 0x1f, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xfc, 0x07, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xfe, 0x03, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0x00, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xc0, 0x38, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xe0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const byte ROWS = 4; //four rows
const byte COLS = 4; //three columns
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {22, 24, 26, 28}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {23, 25, 27, 29 }; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

TM1637Display display(CLK, DIO);

//uint8_t data[] = { 0xff, 0xff, 0xff, 0xff };
uint8_t blank[] = { 0x00, 0x00, 0x00, 0x00 };
String password = "1234";
String inppas;
int kondisi = 0;
int a = 0, b = 0, c = 0, d = 0;
int total, konting;
int mapping; 

void setup() {
  ultrasonic.attach(TRIGPIN, ECHOPIN);
  oled.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  konting = 9999;
  oled.clearDisplay();
  myservo.attach(9);
  pinMode(pot, INPUT);
  lcd.init();
  lcd.backlight();
  display.showNumberDec(0, true);
  display.setBrightness(4);
  // put your setup code here, to run once:
  dht.begin();
  lcd.setCursor(0, 0);
  lcd.print("Password");
}

void loop() {
  while (kondisi == 0)
  {
    lcd.setCursor(0, 1);
    display.showNumberDec(total, true);

    char key = keypad.getKey();
    if (key)
    {

      if (isDigit(key))
      {
        if (key == '0')
        {
          a = b;
          b = c;
          c = d;
          d = 0;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '1')
        {
          a = b;
          b = c;
          c = d;
          d = 1;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '2')
        {
          a = b;
          b = c;
          c = d;
          d = 2;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '3')
        {
          a = b;
          b = c;
          c = d;
          d = 3;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '4')
        {
          a = b;
          b = c;
          c = d;
          d = 4;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '5')
        {
          a = b;
          b = c;
          c = d;
          d = 5;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '6')
        {
          a = b;
          b = c;
          c = d;
          d = 6;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '7')
        {
          a = b;
          b = c;
          c = d;
          d = 7;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '8')
        {
          a = b;
          b = c;
          c = d;
          d = 8;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        else if (key == '9')
        {
          a = b;
          b = c;
          c = d;
          d = 9;
          total = (a * 1000) + (b * 100) + (c * 10) + d;
        }
        inppas += key;

      }
      else if (key == 'C')
      {
        a = b = c = d = total = 0;
      }
      else if (key == 'A')
      {
        if (inppas == password)
        {
          lcd.clear();
          kondisi = 1;
          display.showNumberDec(0, true);
        }
        else
        {
          a = b = c = d = total = 0;
          display.showNumberDec(0, true);
        }
      }


    }

  }
  while (kondisi == 1) {
    char key = keypad.getKey();


    lcd.setCursor(0, 0);
    lcd.print("Pilih :1,2,3,4,5");
    lcd.setCursor(0, 1);
    lcd.print(key);
    if ( key == '1')
    {
      display.showNumberDec(0, true);

      lcd.clear();

      kondisi = 2;
    }
    else if ( key == '2')
    {
      display.showNumberDec(0, true);

      lcd.clear();

      kondisi = 3;
    }
    else if ( key == '3')
    {
      display.showNumberDec(0, true);

      lcd.clear();

      kondisi = 4;
    }
    else if ( key == '4')
    {


      lcd.clear();
      kondisi = 5;

    }
    else if ( key == '5')
    {
      display.showNumberDec(0, true);
      lcd.clear();
      kondisi = 10;
    }
    else
    {
      a = b = c = d = total = 0;
    }

  }
  while (kondisi == 2) {
    char key = keypad.getKey();
    float h = dht.readHumidity();
    // Read temperature as Celsius (the default)
    lcd.setCursor(0, 1);
    lcd.print("Humidity: ");
    lcd.print(h);
    lcd.setCursor(0, 0);
    lcd.print("temperature: ");
    lcd.print(h);
    if (key == 'D') {
      lcd.clear();
      kondisi = 1;
    }
  }
  while (kondisi == 3) {
    char key = keypad.getKey();
    val = analogRead(pot);            // reads the value of the potentiometer (value between 0 and 1023)
    mapping = map(val, 0, 1023, 0, 100);  
    float nilai = analogRead(pot);
    float nilai_v = nilai * (5.0 / 1023.0);
    lcd.setCursor (0, 0);
    lcd.print("POTENSIO ");
    lcd.setCursor(0,1);
    lcd.print ("Value ");
    lcd.setCursor (6, 1);
    lcd.print("         ");
    lcd.setCursor (6, 1);
    lcd.print(nilai);
    lcd.setCursor (0, 2);
    lcd.print("Map ");
    lcd.print(mapping);
    display.showNumberDec(nilai, true);
       // scale it to use it with the servo (value between 0 and 180)
    myservo.write(val);                  // sets the servo position according to the scaled value
    if (key == 'D') {
      lcd.clear();
      kondisi = 1;
    }

  }
  while (kondisi == 4) {
    char key = keypad.getKey();
    oled.drawBitmap(0, 0, rax, 128, 64, WHITE);
    lcd.setCursor(0, 0);
    lcd.print("OLED BANGG");
    oled.display();
    if (key == 'D') {
      lcd.clear();
      kondisi = 1;
      oled.clearDisplay();;
      oled.display();

    }


  }
  while (kondisi == 5) {
    char key = keypad.getKey();
    display.showNumberDec(konting, true);
    lcd.setCursor(0, 0);
    lcd.print("COUNTING DOWN");
    if (key == 'A') {
      kondisi = 9;
    }
    else if ( key == 'C') {
      konting = 9999;
    }


  }
  while (kondisi == 9) {
    display.showNumberDec(konting, true);
    char key = keypad.getKey();
    konting--;
     if (key == 'B') {
        kondisi = 5;
      }
    for ( int i = 0; i < 500; i++) {
      char key = keypad.getKey();
      delay(1);
      if (key == 'B') {
        kondisi = 5;
      }
    }
  }

    while (kondisi == 10) 
    {
      float distanceCM = ultrasonic.getDistanceCM();
      lcd.setCursor (0,0);
      lcd.print ("ULTRASONIK");
      lcd.setCursor (0,1);
      lcd.print ("Distance ");
      lcd.setCursor (9,1);
      lcd.print(distanceCM);
      lcd.print ("cm   ");
        if (distanceCM <10)
      {
       lcd.setCursor(0,2);
       lcd.print ("nope ");
     }
     else if (distanceCM >10) {
       lcd.setCursor(0,2);
       lcd.print ("SAVE");
     }
    }
   
  }// put your main code here, to run repeatedly: